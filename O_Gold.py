{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "application/vnd.databricks.v1+cell": {
     "cellMetadata": {
      "byteLimit": 2048000,
      "rowLimit": 10000
     },
     "inputWidgets": {},
     "nuid": "4e3a55d6-78a4-43cc-bcfd-c4231f4180f9",
     "showTitle": false,
     "tableResultSettingsMap": {},
     "title": ""
    }
   },
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Gold layer tables created successfully!\n"
     ]
    }
   ],
   "source": [
    "# Imports\n",
    "from pyspark.sql.functions import col, row_number, lit\n",
    "from pyspark.sql.window import Window\n",
    "\n",
    "# Function to create surrogate keys\n",
    "def create_surrogate_key(df, key_name):\n",
    "    windowSpec = Window.orderBy(lit(1))\n",
    "    return df.withColumn(key_name, row_number().over(windowSpec))\n",
    "\n",
    "# ------------------- Athlete Table ------------------- #\n",
    "df_athlete = spark.table(\"silver_athlete\") \\\n",
    "    .selectExpr(\"AthleteID as AthleteID\", \"Name as Athlete_FullName\", \"Gender as Athlete_Gender\") \\\n",
    "    .distinct()\n",
    "\n",
    "df_athlete.write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_athlete\")\n",
    "\n",
    "# ------------------- Country Table ------------------- #\n",
    "df_country = spark.table(\"silver_country\") \\\n",
    "    .selectExpr(\"CountryName\", \"NOCCode\", \"Population\", \"GDP\", \"FirstLetter as CountryFirstLetter\") \\\n",
    "    .distinct()\n",
    "\n",
    "df_country = create_surrogate_key(df_country, \"CountryID\")\n",
    "\n",
    "df_country.selectExpr(\n",
    "    \"CountryID as P_Country_ID\",\n",
    "    \"CountryName as Country_Name\",\n",
    "    \"NOCCode as Country_NOCCode\",\n",
    "    \"Population\",\n",
    "    \"GDP\",\n",
    "    \"CountryFirstLetter\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_country\")\n",
    "\n",
    "# ------------------- City Table ------------------- #\n",
    "df_city = spark.table(\"silver_summer\").select(\"City\") \\\n",
    "    .union(spark.table(\"silver_winter\").select(\"City\")) \\\n",
    "    .distinct().withColumnRenamed(\"City\", \"City_Name\")\n",
    "\n",
    "df_city = create_surrogate_key(df_city, \"CityID\")\n",
    "\n",
    "df_city.selectExpr(\n",
    "    \"CityID as P_City_ID\",\n",
    "    \"City_Name\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_city\")\n",
    "\n",
    "# ------------------- Sport Table ------------------- #\n",
    "df_sport_summer = spark.table(\"silver_summer\").selectExpr(\"Sport as Sport_Name\").withColumn(\"Season\", lit(\"Summer\"))\n",
    "df_sport_winter = spark.table(\"silver_winter\").selectExpr(\"Sport as Sport_Name\").withColumn(\"Season\", lit(\"Winter\"))\n",
    "\n",
    "df_sport = df_sport_summer.union(df_sport_winter).distinct()\n",
    "\n",
    "df_sport = create_surrogate_key(df_sport, \"SportID\")\n",
    "\n",
    "df_sport.selectExpr(\n",
    "    \"SportID as P_Sport_ID\",\n",
    "    \"Sport_Name\",\n",
    "    \"Season\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_sport\")\n",
    "\n",
    "# ------------------- Event Table ------------------- #\n",
    "df_event = spark.table(\"silver_summer\").select(\"Event\") \\\n",
    "    .union(spark.table(\"silver_winter\").select(\"Event\")) \\\n",
    "    .distinct().withColumnRenamed(\"Event\", \"Event_Name\")\n",
    "\n",
    "df_event = create_surrogate_key(df_event, \"EventID\")\n",
    "\n",
    "df_event.selectExpr(\n",
    "    \"EventID as P_Event_ID\",\n",
    "    \"Event_Name\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_event\")\n",
    "\n",
    "# ------------------- Medal Table ------------------- #\n",
    "df_medal = spark.table(\"silver_summer\").select(\"Medal\") \\\n",
    "    .union(spark.table(\"silver_winter\").select(\"Medal\")) \\\n",
    "    .distinct().withColumnRenamed(\"Medal\", \"Medal_Type\")\n",
    "\n",
    "df_medal = create_surrogate_key(df_medal, \"MedalID\")\n",
    "\n",
    "df_medal.selectExpr(\n",
    "    \"MedalID as P_Medal_ID\",\n",
    "    \"Medal_Type\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_medal\")\n",
    "\n",
    "# ------------------- Discipline Table ------------------- #\n",
    "df_discipline = spark.table(\"silver_summer\").select(\"Discipline\") \\\n",
    "    .union(spark.table(\"silver_winter\").select(\"Discipline\")) \\\n",
    "    .distinct().withColumnRenamed(\"Discipline\", \"Discipline_Name\")\n",
    "\n",
    "df_discipline = create_surrogate_key(df_discipline, \"DisciplineID\")\n",
    "\n",
    "df_discipline.selectExpr(\n",
    "    \"DisciplineID as P_Discipline_ID\",\n",
    "    \"Discipline_Name\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_discipline\")\n",
    "\n",
    "# ------------------- Bridge Tables ------------------- #\n",
    "\n",
    "# Athlete_Country\n",
    "df_athlete_country = spark.table(\"silver_summer\").select(\"Athlete\", \"Country\") \\\n",
    "    .union(spark.table(\"silver_winter\").select(\"Athlete\", \"Country\")).distinct()\n",
    "\n",
    "df_athlete_country = df_athlete_country \\\n",
    "    .join(df_athlete, df_athlete_country.Athlete == df_athlete.Athlete_FullName) \\\n",
    "    .join(df_country, df_athlete_country.Country == df_country.CountryName)\n",
    "\n",
    "df_athlete_country = create_surrogate_key(df_athlete_country, \"AthCouID\")\n",
    "\n",
    "df_athlete_country.selectExpr(\n",
    "    \"AthCouID as P_AthCou_ID\",\n",
    "    \"AthleteID as F_Athlete_ID\",\n",
    "    \"CountryID as F_Country_ID\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_athlete_country\")\n",
    "\n",
    "# Athlete_Sport\n",
    "df_athlete_sport = spark.table(\"silver_summer\").select(\"Athlete\", \"Sport\") \\\n",
    "    .union(spark.table(\"silver_winter\").select(\"Athlete\", \"Sport\")).distinct()\n",
    "\n",
    "df_athlete_sport = df_athlete_sport \\\n",
    "    .join(df_athlete, df_athlete_sport.Athlete == df_athlete.Athlete_FullName) \\\n",
    "    .join(df_sport, df_athlete_sport.Sport == df_sport.Sport_Name)\n",
    "\n",
    "df_athlete_sport = create_surrogate_key(df_athlete_sport, \"AthSpoID\")\n",
    "\n",
    "df_athlete_sport.selectExpr(\n",
    "    \"AthSpoID as P_AthSpo_ID\",\n",
    "    \"AthleteID as F_Athlete_ID\",\n",
    "    \"SportID as F_Sport_ID\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_athlete_sport\")\n",
    "\n",
    "# Sport_City\n",
    "df_sport_city = spark.table(\"silver_summer\").select(\"Sport\", \"City\") \\\n",
    "    .union(spark.table(\"silver_winter\").select(\"Sport\", \"City\")).distinct()\n",
    "\n",
    "df_sport_city = df_sport_city \\\n",
    "    .join(df_sport, df_sport_city.Sport == df_sport.Sport_Name) \\\n",
    "    .join(df_city, df_sport_city.City == df_city.City_Name)\n",
    "\n",
    "df_sport_city = create_surrogate_key(df_sport_city, \"SpoCitID\")\n",
    "\n",
    "df_sport_city.selectExpr(\n",
    "    \"SpoCitID as P_SpoCit_ID\",\n",
    "    \"SportID as F_Sport_ID\",\n",
    "    \"CityID as F_City_ID\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_sport_city\")\n",
    "\n",
    "# Result Table\n",
    "df_result = spark.table(\"silver_summer\").union(spark.table(\"silver_winter\"))\n",
    "\n",
    "df_result = df_result \\\n",
    "    .join(df_event, df_result.Event == df_event.Event_Name) \\\n",
    "    .join(df_medal, df_result.Medal == df_medal.Medal_Type) \\\n",
    "    .join(df_country, df_result.Country == df_country.CountryName) \\\n",
    "    .join(df_athlete_sport, (df_result.Athlete == df_athlete_sport.Athlete) & (df_result.Sport == df_athlete_sport.Sport))\n",
    "\n",
    "df_result = create_surrogate_key(df_result, \"ResultID\")\n",
    "\n",
    "df_result.selectExpr(\n",
    "    \"ResultID as P_Result_ID\",\n",
    "    \"Year\",\n",
    "    \"AthSpoID as F_AthleteSport\",\n",
    "    \"EventID as F_Event_ID\",\n",
    "    \"MedalID as F_Medal_ID\",\n",
    "    \"Century\",\n",
    "    \"CountryID as F_Country_ID\"\n",
    ").write.format(\"delta\").mode(\"overwrite\").saveAsTable(\"gold_result\")\n",
    "\n",
    "print(\" Gold layer tables created successfully!\")\n"
   ]
  }
 ],
 "metadata": {
  "application/vnd.databricks.v1+notebook": {
   "computePreferences": null,
   "dashboards": [],
   "environmentMetadata": {
    "base_environment": "",
    "environment_version": "2"
   },
   "inputWidgetPreferences": null,
   "language": "python",
   "notebookMetadata": {
    "pythonIndentUnit": 4
   },
   "notebookName": "O_Gold",
   "widgets": {}
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}